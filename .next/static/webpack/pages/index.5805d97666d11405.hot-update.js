"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/RssTicker.js":
/*!*********************************!*\
  !*** ./components/RssTicker.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\n// Global cache to persist across component re-mounts\nlet globalCache = null;\nlet globalLastFetchTime = 0;\nlet globalFetchPromise = null;\nconst RssTicker = ()=>{\n    _s();\n    const [rssItems, setRssItems] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const abortControllerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const intervalRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const CACHE_DURATION = 10 * 60 * 1000; // 10 minutes in milliseconds\n    const fetchRssData = async function() {\n        let retryCount = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, isBackgroundUpdate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n        const now = Date.now();\n        // Check if we have fresh global cache\n        if (globalCache && now - globalLastFetchTime < CACHE_DURATION) {\n            if (!isBackgroundUpdate) {\n                setRssItems(globalCache);\n                setLoading(false);\n                console.log(\"\\uD83D\\uDCE6 Using cached RSS data\");\n            }\n            return;\n        }\n        // If there's already a fetch in progress, wait for it\n        if (globalFetchPromise) {\n            try {\n                await globalFetchPromise;\n                if (globalCache) {\n                    setRssItems(globalCache);\n                    setLoading(false);\n                }\n                return;\n            } catch (error) {\n            // Continue with new fetch if the existing one failed\n            }\n        }\n        // Create a new fetch promise\n        globalFetchPromise = (async ()=>{\n            try {\n                // Cancel any ongoing request\n                if (abortControllerRef.current) {\n                    abortControllerRef.current.abort();\n                }\n                // Create new abort controller for this request\n                abortControllerRef.current = new AbortController();\n                console.log(isBackgroundUpdate ? \"\\uD83D\\uDD04 Background refresh of RSS cache...\" : \"\\uD83D\\uDCE1 Fetching RSS feed...\");\n                const response = await fetch(\"/api/rss-proxy\", {\n                    signal: abortControllerRef.current.signal\n                });\n                if (!response.ok) {\n                    throw new Error(\"HTTP error! status: \".concat(response.status));\n                }\n                const xmlText = await response.text();\n                const parser = new DOMParser();\n                const xmlDoc = parser.parseFromString(xmlText, \"text/xml\");\n                const items = xmlDoc.querySelectorAll(\"item\");\n                const newsItems = Array.from(items).map((item)=>{\n                    var _item_querySelector, _item_querySelector1, _item_querySelector2;\n                    const title = ((_item_querySelector = item.querySelector(\"title\")) === null || _item_querySelector === void 0 ? void 0 : _item_querySelector.textContent) || \"\";\n                    const link = ((_item_querySelector1 = item.querySelector(\"link\")) === null || _item_querySelector1 === void 0 ? void 0 : _item_querySelector1.textContent) || \"\";\n                    const pubDate = ((_item_querySelector2 = item.querySelector(\"pubDate\")) === null || _item_querySelector2 === void 0 ? void 0 : _item_querySelector2.textContent) || \"\";\n                    return {\n                        title: title.trim(),\n                        link: link.trim(),\n                        pubDate: new Date(pubDate),\n                        time: new Date(pubDate).toLocaleTimeString(\"ru-RU\", {\n                            hour: \"2-digit\",\n                            minute: \"2-digit\",\n                            timeZone: \"Europe/Moscow\"\n                        })\n                    };\n                });\n                // Sort by publication date (newest first) and take top 10\n                newsItems.sort((a, b)=>b.pubDate - a.pubDate);\n                const topNews = newsItems.slice(0, 10);\n                // Update global cache\n                globalCache = topNews;\n                globalLastFetchTime = now;\n                console.log(isBackgroundUpdate ? \"✅ Background cache updated\" : \"✅ RSS feed loaded and cached\");\n                return topNews;\n            } finally{\n                globalFetchPromise = null;\n            }\n        })();\n        try {\n            const topNews = await globalFetchPromise;\n            // Hot-swap the data seamlessly\n            setRssItems(topNews);\n            if (!isBackgroundUpdate) {\n                setLoading(false);\n            }\n        } catch (error) {\n            // Ignore aborted requests (common in React strict mode)\n            if (error.name === \"AbortError\") {\n                console.log(\"Request aborted (likely due to component re-mount)\");\n                return;\n            }\n            console.error(\"Error fetching RSS:\", error.message);\n            // Retry logic for failed fetches (up to 2 retries)\n            if (error.name === \"TypeError\" && error.message === \"Failed to fetch\" && retryCount < 2) {\n                console.log(\"Retrying RSS fetch (attempt \".concat(retryCount + 1, \"/2)...\"));\n                setTimeout(()=>fetchRssData(retryCount + 1, isBackgroundUpdate), 1000 * (retryCount + 1));\n                return;\n            }\n            if (!isBackgroundUpdate) {\n                setLoading(false);\n            }\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let timeoutId;\n        let mounted = true;\n        // Check if we already have cached data\n        if (globalCache && Date.now() - globalLastFetchTime < CACHE_DURATION) {\n            setRssItems(globalCache);\n            setLoading(false);\n            console.log(\"\\uD83D\\uDCE6 Using cached RSS data\");\n        } else {\n            // Add a small delay before first fetch to ensure server is ready\n            timeoutId = setTimeout(()=>{\n                if (mounted) {\n                    fetchRssData();\n                }\n            }, 1500);\n        }\n        // Set up a single global interval for background refresh (only if not already set)\n        if (!intervalRef.current) {\n            intervalRef.current = setInterval(()=>{\n                fetchRssData(0, true); // true = background update\n            }, CACHE_DURATION);\n        }\n        return ()=>{\n            mounted = false;\n            clearTimeout(timeoutId);\n            if (abortControllerRef.current) {\n                abortControllerRef.current.abort();\n            }\n        // Don't clear the global interval - let it continue for other instances\n        };\n    }, []);\n    if (loading && rssItems.length === 0) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"w-full bg-black text-white h-10 flex items-center overflow-hidden\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center px-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"bg-red-600 text-white px-2 py-1 text-xs font-bold rounded mr-4\",\n                        children: \"LIVE\"\n                    }, void 0, false, {\n                        fileName: \"/home/runner/workspace/components/RssTicker.js\",\n                        lineNumber: 171,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-white text-sm\",\n                        children: \"Загрузка новостей Медузы...\"\n                    }, void 0, false, {\n                        fileName: \"/home/runner/workspace/components/RssTicker.js\",\n                        lineNumber: 174,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/runner/workspace/components/RssTicker.js\",\n                lineNumber: 170,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/home/runner/workspace/components/RssTicker.js\",\n            lineNumber: 169,\n            columnNumber: 7\n        }, undefined);\n    }\n    // Fallback when no RSS items and not loading\n    if (!loading && rssItems.length === 0) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"w-full bg-black text-white h-10 flex items-center overflow-hidden\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center px-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"bg-red-600 text-white px-2 py-1 text-xs font-bold rounded mr-4\",\n                        children: \"LIVE\"\n                    }, void 0, false, {\n                        fileName: \"/home/runner/workspace/components/RssTicker.js\",\n                        lineNumber: 185,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-white text-sm\",\n                        children: \"Лента новостей Медузы загружается...\"\n                    }, void 0, false, {\n                        fileName: \"/home/runner/workspace/components/RssTicker.js\",\n                        lineNumber: 188,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/runner/workspace/components/RssTicker.js\",\n                lineNumber: 184,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/home/runner/workspace/components/RssTicker.js\",\n            lineNumber: 183,\n            columnNumber: 7\n        }, undefined);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full bg-black text-white h-10 flex items-center overflow-hidden\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center px-4 flex-shrink-0\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    className: \"bg-red-600 text-white px-2 py-1 text-xs font-bold rounded mr-4\",\n                    children: \"LIVE\"\n                }, void 0, false, {\n                    fileName: \"/home/runner/workspace/components/RssTicker.js\",\n                    lineNumber: 197,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/home/runner/workspace/components/RssTicker.js\",\n                lineNumber: 196,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-1 overflow-hidden\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"animate-marquee\",\n                    children: [\n                        ...rssItems,\n                        ...rssItems\n                    ].map((item, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"whitespace-nowrap mr-12 flex items-center\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-red-500 font-bold text-xs mr-3\",\n                                    children: item.time\n                                }, void 0, false, {\n                                    fileName: \"/home/runner/workspace/components/RssTicker.js\",\n                                    lineNumber: 207,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                    href: item.link,\n                                    target: \"_blank\",\n                                    rel: \"noopener noreferrer\",\n                                    className: \"text-white hover:text-gray-300 transition-colors cursor-pointer text-sm\",\n                                    onClick: (e)=>e.stopPropagation(),\n                                    children: item.title\n                                }, void 0, false, {\n                                    fileName: \"/home/runner/workspace/components/RssTicker.js\",\n                                    lineNumber: 208,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-gray-600 mx-4 text-lg\",\n                                    children: \"•\"\n                                }, void 0, false, {\n                                    fileName: \"/home/runner/workspace/components/RssTicker.js\",\n                                    lineNumber: 217,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, \"\".concat(index, \"-\").concat(item.time), true, {\n                            fileName: \"/home/runner/workspace/components/RssTicker.js\",\n                            lineNumber: 206,\n                            columnNumber: 13\n                        }, undefined))\n                }, void 0, false, {\n                    fileName: \"/home/runner/workspace/components/RssTicker.js\",\n                    lineNumber: 203,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/home/runner/workspace/components/RssTicker.js\",\n                lineNumber: 202,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/runner/workspace/components/RssTicker.js\",\n        lineNumber: 195,\n        columnNumber: 5\n    }, undefined);\n};\n_s(RssTicker, \"vIg0bKUHJK42nArLnaoXoKqsPUs=\");\n_c = RssTicker;\n/* harmony default export */ __webpack_exports__[\"default\"] = (RssTicker);\nvar _c;\n$RefreshReg$(_c, \"RssTicker\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/RssTicker.js\n"));

/***/ })

});